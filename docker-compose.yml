version: '3.0'
services:

  poll:
    container_name: poll
    restart: always
    environment:
      - "REDIS_HOST="
    build: ./
    ports:
      - '5000:80'
    networks:
      - mynetwork

  redis:
    container_name: redis
    restart: always
    ports:
      - '6379'
    networks:
      - mynetwork

  worker:
    container_name: worker
    restart: always
    build: ./
    environment:
      - "REDIS_HOST="
      - "POSTGRES_HOST="
      - "POSTGRES_PORT="
      - "POSTGRES_DB="
      - "POSTGRES_USER="
      - "POSTGRES_PASSWORD="
    networks:
      - mynetwork

  result:
    container_name: result
    restart: always
    build: ./
    environment:
      - "POSTGRES_HOST="
      - "POSTGRES_PORT="
      - "POSTGRES_DB="
      - "POSTGRES_USER="
      - "POSTGRES_PASSWORD="
    ports:
      - '5001:80'
    networks:
      - mynetwork

    postgres:
      container_name: postgres
      restart: always
      environment:
        - "POSTGRES_HOST="
        - "POSTGRES_PORT="
        - "POSTGRES_DB="
        - "POSTGRES_USER="
        - "POSTGRES_PASSWORD="
      volumes:
        - postgres-data:/var/lib/postgres/data
      networks:
        - mynetwork

networks:
    mynetwork:
      driver: bridge
      ipam:
        config:
          - subnet: 172.1.0.0/16

volumes:
  postgres-data:

